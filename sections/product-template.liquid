{% style %}
  /* When the hidden radio is checked, style its label as “active” */
  .product-variants .btn-outline-primary {
    border-color: #022c3b !important;
    border-radius: 2px;
  }
  .product-variants .btn-outline-primary:hover {
    color: #fff !important;
    background-color: #022c3b !important;
    border-color: #022c3b !important;
  }
  .product-variants .btn {
    color: #022c3b !important;
  }
  .btn-check:checked + .btn {
    color: #fff !important;
    background-color: #022c3b;
    border-color: #022c3b;
  }

  /* When the hidden radio is disabled, fade out its label */
  .btn-check:disabled + .btn {
    background-color: #dddddd !important;
    border-color: #dddddd !important;
    opacity: 0.5;
    pointer-events: none;
  }
  label[for='quantity'] {
    margin-bottom: 0;
    margin-right: 5px;
  }
  input[name='quantity'] {
    max-width: 80px;
  }
{% endstyle %}
<!-- sections/main-product.liquid -->
<section class="py-3 py-md-5">
  <div class="container">
    <div class="row g-4">
      <!-- Image Column -->
      <div class="col-12 col-md-6">
        {% if product.featured_image %}
          <img
            id="main-image"
            src="{{ product.featured_image | image_url: width: 800 }}"
            alt="{{ product.title }}"
            class="img-fluid rounded"
            width="800"
            height="auto"
          >
          {% if product.images.size > 1 %}
            <div class="thumbnail text-center mt-2 d-flex gap-2">
              {% for img in product.images %}
                <img
                  src="{{ img.src | image_url: width: 800 }}"
                  width="100"
                  height="auto"
                  onclick="document.getElementById('main-image').src = this.src"
                >
              {% endfor %}
            </div>
          {% endif %}
        {% else %}
          <div class="bg-light rounded text-center py-5">No image available</div>
        {% endif %}
      </div>

      <!-- Details Column -->
      <div class="col-12 col-md-6">
        <form method="post" action="/cart/add">
          <!-- Render blocks as before -->
          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'product_title' %}
                <h1 class="h2 mb-3">{{ product.title }}</h1>

              {% when 'product_price' %}
                <h3 class="mb-3">
                  <span id="product_price">{{ product.selected_or_first_available_variant.price | money }}</span>
                </h3>

              {% when 'product_description' %}
                <p class="mb-4">{{ product.description }}</p>

              {% when 'product_variant' %}
                {% unless product.has_only_default_variant %}
                  <div id="product-variants" class="product-variants mt-4">
                    {% for option in product.options_with_values %}
                      <div class="option {{ option.name | downcase }} mt-3">
                        <h6 class="text-uppercase">{{ option.name }}</h6>
                        {% for value in option.values %}
                          {% assign btn_id = 'option'
                            | append: option.position
                            | append: '-'
                            | append: value
                            | handleize
                          %}

                          <input
                            type="radio"
                            class="btn-check"
                            name="option{{ option.position }}"
                            id="{{ btn_id }}"
                            autocomplete="off"
                            value="{{ value }}"
                            data-option-position="{{ option.position }}"
                          >
                          <label class="btn btn-outline-primary me-2 mb-2" for="{{ btn_id }}">
                            {{ value }}
                          </label>
                        {% endfor %}
                      </div>
                    {% endfor %}
                  </div>
                {% endunless %}

              {% when 'product_quantity' %}
                <div class="w-full mt-3 d-flex align-items-center gap-3">
                  <label for="quantity" class="form-label">Quantity</label>
                  <input
                    id="quantity"
                    type="number"
                    name="quantity"
                    value="1"
                    min="1"
                    class="form-control w-auto "
                  >
                </div>

              {% when 'product_add_to_cart' %}
                <button
                  type="submit"
                  name="add"
                  class="vivewear_btn_primary mt-3"
                >
                  Add to Cart
                </button>

              {% when 'product_sku' %}
                {% if product.sku %}
                  <p class="text-muted mt-3">SKU: {{ product.sku }}</p>
                {% endif %}

              {% when 'product_vendor' %}
                {% if product.vendor %}
                  <p class="text-muted mt-3">Vendor: {{ product.vendor }}</p>
                {% endif %}
            {% endcase %}
          {% endfor %}

          <!-- Hidden select so form submits the correct variant ID -->
          <select name="id" id="variant_selector" class="d-none">
            {% for v in product.variants %}
              <option
                value="{{ v.id }}"
                data-sold="{{ v.available | json }}"
              >
                {{ v.title }}
              </option>
            {% endfor %}
          </select>
        </form>
      </div>
    </div>
  </div>

  <!-- Expose all variants to JS -->
  <script>
    const VARIANTS = [
      {% for v in product.variants %}
        {
          id: {{ v.id }},
          available: {{ v.available | json }},
          options: [
            "{{ v.option1 | escape }}",
            "{{ v.option2 | escape }}",
            "{{ v.option3 | escape }}"
          ],
          price: {{ v.price | money | json }}
        }{% unless forloop.last %},{% endunless %}
      {% endfor %}
    ];
  </script>

  <!-- JS: update variant, price, button & enable/disable options -->
  <script>
    function updateVariant() {
      // 1. Gather current selections
      const sel = {};
      document.querySelectorAll('[data-option-position]').forEach((elm) => {
        if (elm.checked) {
          sel[elm.dataset.optionPosition] = elm.value;
        }
      });

      // 2. Find matching variant
      const match = VARIANTS.find((v) => Object.keys(sel).every((pos) => v.options[pos - 1] === sel[pos]));

      if (match) {
        // 3a. Update hidden select
        document.getElementById('variant_selector').value = match.id;

        // 3b. Update price
        document.getElementById('product_price').textContent = match.price;

        // 3c. Toggle Add to Cart button
        const btn = document.querySelector('button[name="add"]');
        if (!match.available) {
          btn.disabled = true;
          btn.textContent = 'Sold Out';
        } else {
          btn.disabled = false;
          btn.textContent = 'Add to Cart';
        }
      }

      // 4. Enable/disable option radios for each group
      document.querySelectorAll('[data-option-position]').forEach((elm) => {
        const pos = Number(elm.dataset.optionPosition);
        // build a test selection: all already chosen + this candidate
        const test = { ...sel, [pos]: elm.value };

        // see if any variant matches AND is available
        const ok = VARIANTS.some((v) => Object.keys(test).every((p) => v.options[p - 1] === test[p]) && v.available);
        elm.disabled = !ok;
        if (!ok && elm.checked) elm.checked = false;
      });
    }

    document.addEventListener('DOMContentLoaded', () => {
      // ← Add this auto-select logic first:
      if (!document.querySelector('[data-option-position]:checked')) {
        // Pick the first in-stock variant (or fallback to the very first)
        const firstAvailable = VARIANTS.find((v) => v.available) || VARIANTS[0];
        // Check its option radios (option1 = color, option2 = size, ...)
        firstAvailable.options.forEach((opt, idx) => {
          const selector = `input[name="option${idx + 1}"][value="${opt}"]`;
          const input = document.querySelector(selector);
          if (input) input.checked = true;
        });
      }

      // ← Your existing initial sync
      updateVariant();

      // ← And then re-sync on changes as before
      document
        .querySelectorAll('[data-option-position]')
        .forEach((elm) => elm.addEventListener('change', updateVariant));
    });
  </script>
</section>

{% schema %}
{
  "name": "single product",
  "settings": [],
  "blocks": [
    { "type": "product_title", "name": "Product title" },
    { "type": "product_price", "name": "Product price" },
    { "type": "product_description", "name": "Product description" },
    { "type": "product_variant", "name": "Product variant" },
    { "type": "product_quantity", "name": "Product quantity" },
    { "type": "product_add_to_cart", "name": "Product add to cart" },
    { "type": "product_sku", "name": "Product SKU" },
    { "type": "product_vendor", "name": "Product vendor" }
  ],
  "presets": [
    {
      "name": "Single product",
      "blocks": [
        { "type": "product_title" },
        { "type": "product_price" },
        { "type": "product_description" },
        { "type": "product_variant" },
        { "type": "product_quantity" },
        { "type": "product_add_to_cart" }
      ]
    }
  ]
}
{% endschema %}
